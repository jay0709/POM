/**
 * 
 */
package com.owners;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;

/**
 * @author isaacindeevervemula
 *
 */
public class commonFunctions {
	AndroidDriver<AndroidElement> driver;
	WebDriverWait wait;

	void startAppium() {

	}

	void stopAppium() {

	}

	public static String randomAlphaNumeric(int count) {
		final String token = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
		StringBuilder builder = new StringBuilder();
		builder.append("test_");
		while (count-- != 0) {
			int character = (int) (Math.random() * token.length());
			builder.append(token.charAt(character));
		}
		return builder.toString();
	}

	public void takeScreenshot(String filename, AndroidDriver<AndroidElement> driver)
			throws IOException, InterruptedException {
		File image1 = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(image1, new File(" " + filename));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String[] countBedBathSqft(String idText) {
		String elementId = idText;
		String[] splitValue = elementId.split(" â€¢ ");
		// System.out.println(splitValue[0] + ":" + splitValue[1] + ":" +
		// splitValue[2]);
		return splitValue;

	}

	public void scrollToText(String text, AndroidDriver<AndroidElement> driver)
			throws MalformedURLException, InterruptedException {
		driver.findElementByAndroidUIAutomator(
				"new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().textContains(\""
						+ text + "\").instance(0))");
	}

	public void verticalScrollUpwards(AndroidDriver<AndroidElement> driver)
			throws MalformedURLException, InterruptedException {
		Dimension size;
		size = driver.manage().window().getSize();
		int xCoordinate = (int) (size.width * 0.5);
		int startY = (int) (size.height * 0.78);
		int endY = (int) (size.height * 0.30);
		// System.out.println(xCoordinate + ":" + startY + ":" + endY);
		driver.swipe(xCoordinate, startY, xCoordinate, endY, 3000);
	}

	public By navigatingSearchTab = By
			.xpath("//android.support.v7.app.ActionBar.Tab[1]//android.widget.LinearLayout[1]");
	public By clickSearchBar = By.id("com.owners.buyer:id/search_result_title_text_view");
	public By typeInsearchBar = By.id("com.owners.buyer:id/search_suggestion_search");
	public By searchResultStateName = By.id("com.owners.buyer:id/suggestion_line_two");
	public By searchingDialouge = By.id("com.owners.buyer:id/dialog_account_message");
	public By searchNearby = By.name("Homes Near:");
	public By filtersTab = By.id("com.owners.buyer:id/search_filter_view");
	public By applyFilterButton = By.id("com.owners.buyer:id/property_filters_done_button");
	public By clearFiltersButton = By.id("com.owners.buyer:id/property_filters_clear_button");
	public By popUpMessage = By.id("com.android.packageinstaller:id/permission_message");
	public By allowPermission = By.id("com.android.packageinstaller:id/permission_allow_button");
	public By savedSearchStar = By.id("com.owners.buyer:id/saved_search_star");
	public By clickDiscoverTab = By.xpath("//android.support.v7.app.ActionBar.Tab[3]//android.widget.LinearLayout[1]");
	public By savedSearchesHeader = By.xpath("//*[contains(@text, 'Saved Searches')]");
	public By saveSearchText = By.id("com.owners.buyer:id/search_result_save_search_text_view");

	@SuppressWarnings("deprecation")
	public void searchMapSRP(String searchString, AndroidDriver<AndroidElement> driver) {
		wait = new WebDriverWait(driver, 20);
		wait.until(ExpectedConditions.elementToBeClickable(navigatingSearchTab));
		driver.findElement(navigatingSearchTab).click();
		driver.findElement(clickSearchBar).click();
		driver.findElement(typeInsearchBar).sendKeys(searchString);
		wait.until(ExpectedConditions.textToBePresentInElement(searchResultStateName, searchString.split(",")[1]));
		driver.findElement(searchResultStateName).click();

		wait.until(ExpectedConditions.invisibilityOfElementLocated(searchingDialouge));
	}

	public void allowLocationAccess(AndroidDriver<AndroidElement> driver) {

		try {
			wait = new WebDriverWait(driver, 20);
			wait.until(ExpectedConditions.visibilityOfElementLocated(popUpMessage));
			driver.findElement(allowPermission).click();
		} catch (Exception e) {
			System.out.println("Skip button not present...moving ahead..");
		}
	}

	public void relaunchApp(AndroidDriver<AndroidElement> driver) {
		driver.closeApp();
		driver.startActivity("com.owners.buyer", "com.owners.buyer.MainActivity");
		try {
			driver.findElement(By.xpath("//android.widget.Button[@index='1']")).click();
		} catch (Exception e) {
			System.out.println("App update pop up not present.. Moving ahead...");
		}
	}

	public void clearAllFilters(AndroidDriver<AndroidElement> driver) {
		driver.findElement(navigatingSearchTab).click();
		driver.findElement(filtersTab).click();
		driver.findElement(clearFiltersButton).click();
		driver.findElement(applyFilterButton).click();
		wait.until(ExpectedConditions.invisibilityOfElementLocated(searchingDialouge));

	}

	public void deleteAllSAvedSearch(AndroidDriver<AndroidElement> driver)
			throws MalformedURLException, InterruptedException {
		wait = new WebDriverWait(driver, 20);
		relaunchApp(driver);
		wait.until(ExpectedConditions.presenceOfElementLocated(clickDiscoverTab));
		driver.findElement(clickDiscoverTab).click();
		System.out.println("Discover Tab clicked");
		try {
			scrollToText("Saved Searches", driver);
			while (driver.findElement(savedSearchStar).isEnabled()) {
				driver.findElement(savedSearchStar).click();
			}
		} catch (Exception e) {
			System.out.println("All saved search deleted..!");
		}
	}

	public void saveSearch(AndroidDriver<AndroidElement> driver) throws InterruptedException {
		driver.findElement(saveSearchText).click();
		Thread.sleep(5000);
		if (driver.findElement(saveSearchText).getText().equals("SAVED"))
			System.out.println("Search is Saved..!");
		else
			driver.findElement(saveSearchText).click();
		Thread.sleep(5000);
	}

}
