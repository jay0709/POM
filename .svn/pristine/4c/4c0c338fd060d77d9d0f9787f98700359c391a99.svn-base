package com.favourites.PageFactory;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.owners.commonFunctions;
import com.owners.properties;
import com.owners.PageFactory.Registration_PO;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;

public class FavoritesTab_PO {
	AndroidDriver<AndroidElement> driver;
	WebElement element;
	WebDriverWait wait;
	commonFunctions cf = new commonFunctions();
	Registration_PO reg = new Registration_PO();
	properties pr = new properties();
	FavTabID_PO ft = new FavTabID_PO();

	public void loginFromFavTab(AndroidDriver<AndroidElement> driver) {
		cf.relaunchApp(driver);
		WebDriverWait wait = new WebDriverWait(driver, 10);
		driver.findElement(ft.clickFavouriteTab).click();
		try {
			wait.until(ExpectedConditions.elementToBeClickable(reg.onboarding_SignInBtn));
			// Enter email ID
			driver.findElement(reg.onboarding_RegnEmail).click();
			driver.findElement(reg.onboarding_RegnEmail).sendKeys(pr.email1);
			System.out.println("Entered the email ID: " + pr.email1);

			// Enter PWD
			driver.hideKeyboard();
			driver.findElement(reg.onboarding_RegnPassword).sendKeys(pr.password);
			System.out.println("Entered the password: " + pr.password);

			// Click on SignIn Button
			driver.hideKeyboard();
			driver.findElement(reg.onboarding_SignInBtn).click();
			System.out.println("Clicked on Sign In Button");

		} catch (Exception e) {
			System.out.println("User is already signed in..!");
		}

	}

	public void checkNoSavedListingsText(AndroidDriver<AndroidElement> driver) throws InterruptedException {
		Thread.sleep(5000);
		driver.findElement(ft.clickFavouriteTab).click();
		try {
			while (driver.findElement(ft.favIcon).isEnabled()) {
				driver.findElement(ft.favIcon).click();
			}
		} catch (Exception e) {
			System.out.println(driver.findElement(ft.noFavProperties).getText() + " : No Fav properties Text Verified");
			System.out.println(driver.findElement(ft.emptyMessage).getText() + " : Empty message text verified");
		}
		System.out.println("No favorites properties are present in the Fav Tab..!");
		Thread.sleep(5000);
	}

	public void addTextInFavTab(AndroidDriver<AndroidElement> driver, String textToEnter) throws InterruptedException {
		driver.findElement(ft.clickFavouriteTab).click();
		WebDriverWait wait = new WebDriverWait(driver, 10);
		Thread.sleep(2000);
		driver.findElement(ft.editTextField).click();
		confirmDisclaimer(driver);
		driver.findElement(ft.editTextField).sendKeys(textToEnter);
		driver.hideKeyboard();
		String[] chars = driver.findElement(ft.remainingChars).getText().split("/");
		String maxLimit = chars[1];
		System.out.println("Max limit of enetering characters: " + maxLimit);
		System.out.println("Total characters entered: " + chars[0]);
		driver.findElement(ft.saveAssetButton).click();
		wait.until(ExpectedConditions.invisibilityOfElementLocated(ft.sendTextProgressBar));
		try {
			wait.until(ExpectedConditions.visibilityOfElementLocated(ft.commentTextView));
		} catch (Exception e) {
			System.out.println("Comment added but not relfected in the view..");
		}
		System.out.println("Asset addition completed..");
	}

	public void confirmDisclaimer(AndroidDriver<AndroidElement> driver) {
		WebDriverWait wait = new WebDriverWait(driver, 10);
		// cf.relaunchApp(driver);
		// driver.findElement(ft.clickFavouriteTab).click();
		try {
			wait.until(ExpectedConditions.visibilityOfElementLocated(ft.confirmDisclaimerFirstTime));
			System.out
					.println(driver.findElement(ft.privateNoteDescription).getText() + " : Description Text verified");
			driver.findElement(ft.disclaimerAcceptButton).click();
			System.out.println("OK Button clicked -> Navigated to Fav tab.");
		} catch (Exception e) {
			System.out.println("Disclaimer page is not opened as user navigated to this page earlier as well..!");
		}

	}

	public void latestCommentVerify(AndroidDriver<AndroidElement> driver, String assetToAdd)
			throws InterruptedException {
		addTextInFavTab(driver, assetToAdd);
		Thread.sleep(2000);
		System.out.println("Asset author initials are: " + driver.findElement(ft.commentAuthorInitials).getText());
		String lastComment = driver.findElement(ft.commentTextView).getText().trim().substring(12);
		System.out.println(
				"Asset added time is: " + driver.findElement(ft.commentTextView).getText().trim().substring(4, 10));
		Assert.assertEquals(assetToAdd, lastComment, "Last comment does not match with the commet added");
	}

	public void verifyLoginBeforeSaveListing(AndroidDriver<AndroidElement> driver) {
		driver.findElement(ft.favPropertyList).click();
		WebDriverWait wait = new WebDriverWait(driver, 5);
		try {
			wait.until(ExpectedConditions.elementToBeClickable(reg.onboarding_SignInBtn));
			// Enter email ID
			driver.findElement(reg.onboarding_RegnEmail).click();
			driver.findElement(reg.onboarding_RegnEmail).sendKeys(pr.email1);
			System.out.println("Entered the email ID: " + pr.email1);

			// Enter PWD
			driver.hideKeyboard();
			driver.findElement(reg.onboarding_RegnPassword).sendKeys(pr.password);
			System.out.println("Entered the password: " + pr.password);

			// Click on SignIn Button
			// driver.hideKeyboard();
			driver.findElement(reg.onboarding_SignInBtn).click();
			System.out.println("Clicked on Sign In Button");

		} catch (Exception e) {
			System.out.println("User is Signed in..!");
		}

		try {
			wait.until(ExpectedConditions.presenceOfElementLocated(ft.coShopAlertTitle));
			System.out.println(driver.findElement(ft.coShopAlertTitle).getText());
			System.out.println(driver.findElement(ft.alertTittleMessage).getText());
			driver.findElement(ft.doNotAskAgain).click();
			driver.findElement(ft.notNowButton).click();
		} catch (Exception e) {
			System.out.println("No co-shop alert is visible..!");
		}
	}
}
